{"version":3,"sources":["webpack:///./src/pages/dooliz-menu-export-check.module.less","webpack:///./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack:///./node_modules/@babel/runtime/helpers/esm/inherits.js","webpack:///./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","webpack:///./node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","webpack:///./node_modules/@babel/runtime/helpers/esm/construct.js","webpack:///./node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","webpack:///./node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","webpack:///./src/pages/dooliz-menu-export-check.js"],"names":["module","exports","_setPrototypeOf","o","p","Object","setPrototypeOf","__proto__","_inherits","subClass","superClass","TypeError","prototype","create","constructor","value","writable","configurable","_getPrototypeOf","getPrototypeOf","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","toString","call","e","Parent","args","Class","a","push","apply","instance","Function","bind","arguments","_cache","Map","undefined","fn","indexOf","has","get","set","Wrapper","this","enumerable","parseMenuIdFromBackendName","name","result","exec","groups","menu_id","MenuTextInput","setValue","htmlFor","id","placeholder","onChange","target","MenuFileInput","type","files","reader","FileReader","onload","file_content","readAsText","DoolizMenuExportCheck","useState","menu_json","setMenuJson","menu_file","setMenuFile","errors","setErrors","title","onClick","menu_content","content","JSON","parse","menus","categories","products","modifier_groups","modifiers","plus","forEach","menu","backend_name","item_type","category","product","modifier_group","modifier","keys","key","used","plu","record","item","records","length","includes","modifier_type","detectErrors","alert","className","styles","success","map","error","item_name"],"mappings":"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","file":"component---src-pages-dooliz-menu-export-check-js-9995324ccc17eeb877b7.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"dooliz-menu-export-check-module--error--Da3zU\",\"success\":\"dooliz-menu-export-check-module--success--5sBJF\",\"item_type\":\"dooliz-menu-export-check-module--item_type--2OcP-\",\"item_name\":\"dooliz-menu-export-check-module--item_name--2Gq5n\"};","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import setPrototypeOf from \"./setPrototypeOf\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf\";\nimport setPrototypeOf from \"./setPrototypeOf\";\nimport isNativeFunction from \"./isNativeFunction\";\nimport construct from \"./construct\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","import React, { useState } from 'react';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\n\nimport styles from './dooliz-menu-export-check.module.less';\n\nconst parseMenuIdFromBackendName = (name) => {\n    const result = /\\[(?<menu_id>\\d+)\\].*/.exec(name);\n\n    if (result && result.groups && result.groups.menu_id) {\n        return result.groups.menu_id;\n    }\n    return null;\n};\n\nconst detectErrors = (menu_content) => {\n    const content = JSON.parse(menu_content);\n    const errors = [];\n\n    const menus = {};\n    const categories = {};\n    const products = {};\n    const modifier_groups = {};\n    const modifiers = {};\n\n    const plus = {};\n\n    content.menus.forEach((menu) => {\n        if (menu.backend_name in menus) {\n            errors.push({\n                type: 'DUPLICATE',\n                item_type: 'menu',\n                id: menu.backend_name,\n            });\n            return;\n        }\n        menus[menu.backend_name] = menu;\n    });\n\n    content.categories.forEach((category) => {\n        if (category.backend_name in categories) {\n            errors.push({\n                type: 'DUPLICATE',\n                item_type: 'category',\n                id: category.backend_name,\n            });\n            return;\n        }\n        categories[category.backend_name] = category;\n    });\n\n    content.products.forEach((product) => {\n        if (product.backend_name in products) {\n            errors.push({\n                type: 'DUPLICATE',\n                item_type: 'product',\n                id: product.backend_name,\n            });\n            return;\n        }\n        products[product.backend_name] = product;\n    });\n\n    content.modifier_groups.forEach((modifier_group) => {\n        if (modifier_group.backend_name in modifier_groups) {\n            errors.push({\n                type: 'DUPLICATE',\n                item_type: 'modifier_group',\n                id: modifier_group.backend_name,\n            });\n            return;\n        }\n        modifier_groups[modifier_group.backend_name] = modifier_group;\n    });\n\n    content.modifiers.forEach((modifier) => {\n        if (modifier.backend_name in modifiers) {\n            errors.push({\n                type: 'DUPLICATE',\n                item_type: 'modifier',\n                id: modifier.backend_name,\n            });\n            return;\n        }\n        modifiers[modifier.backend_name] = modifier;\n    });\n\n    Object.keys(menus).forEach((key) => {\n        const menu = menus[key];\n\n        menu.categories.forEach((backend_name) => {\n            if (!(backend_name in categories)) {\n                errors.push({\n                    type: 'MISSING',\n                    item_type: 'category',\n                    id: backend_name,\n                });\n            } else {\n                categories[backend_name].used = true;\n            }\n        });\n    });\n\n    Object.keys(categories).forEach((key) => {\n        const category = categories[key];\n\n        category.products.forEach((backend_name) => {\n            if (!(backend_name in products)) {\n                errors.push({\n                    type: 'MISSING',\n                    item_type: 'product',\n                    id: backend_name,\n                });\n            } else {\n                products[backend_name].used = true;\n            }\n        });\n    });\n\n    Object.keys(products).forEach((key) => {\n        const product = products[key];\n\n        product.modifier_groups = product.modifier_groups || [];\n        product.modifier_groups.forEach((backend_name) => {\n            if (!(backend_name in modifier_groups)) {\n                errors.push({\n                    type: 'MISSING',\n                    item_type: 'modifier_group',\n                    id: backend_name,\n                });\n            } else {\n                modifier_groups[backend_name].used = true;\n            }\n        });\n\n        if (!('plu' in product) || !product.plu) {\n            errors.push({\n                type: 'EMPTY_PLU',\n                item_type: 'product',\n                id: key,\n            });\n        } else {\n            const record = {\n                item_type: 'product',\n                item: product,\n            };\n            const menu_id = parseMenuIdFromBackendName(product.backend_name);\n            const id = `${menu_id}_${product.plu}`;\n            if (id in plus) {\n                plus[id].push(record);\n            } else {\n                plus[id] = [record];\n            }\n        }\n    });\n\n    Object.keys(modifier_groups).forEach((key) => {\n        const modifier_group = modifier_groups[key];\n\n        modifier_group.modifiers.forEach((backend_name) => {\n            if (!(backend_name in modifiers)) {\n                errors.push({\n                    type: 'MISSING',\n                    item_type: 'modifier',\n                    id: backend_name,\n                });\n            } else {\n                modifiers[backend_name].used = true;\n            }\n        });\n    });\n\n    Object.keys(modifiers).forEach((key) => {\n        const modifier = modifiers[key];\n\n        if (!('plu' in modifier) || !modifier.plu) {\n            errors.push({\n                type: 'EMPTY_PLU',\n                item_type: 'modifier',\n                id: key,\n            });\n        } else {\n            const record = {\n                item_type: 'modifier',\n                item: modifier,\n            };\n            const menu_id = parseMenuIdFromBackendName(modifier.backend_name);\n            const id = `${menu_id}_${modifier.plu}`;\n            if (id in plus) {\n                plus[id].push(record);\n            } else {\n                plus[id] = [record];\n            }\n        }\n    });\n\n    Object.keys(plus).forEach((key) => {\n        const records = plus[key];\n\n        if (records.length === 1) {\n            return;\n        }\n\n        errors.push({\n            id: records[0].item.backend_name,\n            type: 'DUPLICATE_PLU',\n            records,\n        });\n    });\n\n    Object.keys(categories).forEach((key) => {\n        const category = categories[key];\n\n        if (category.used !== true) {\n            errors.push({\n                type: 'UNUSED_ITEM',\n                item_type: 'category',\n                id: category.backend_name,\n            });\n        }\n    });\n\n    Object.keys(products).forEach((key) => {\n        const product = products[key];\n\n        if (product.used !== true) {\n            errors.push({\n                type: 'UNUSED_ITEM',\n                item_type: 'product',\n                id: product.backend_name,\n            });\n        }\n    });\n\n    Object.keys(modifier_groups).forEach((key) => {\n        const modifier_group = modifier_groups[key];\n\n        if (modifier_group.used !== true) {\n            errors.push({\n                type: 'UNUSED_ITEM',\n                item_type: 'modifier_group',\n                id: modifier_group.backend_name,\n            });\n        }\n    });\n\n    Object.keys(modifiers).forEach((key) => {\n        const modifier = modifiers[key];\n\n        if (modifier.used !== true) {\n            errors.push({\n                type: 'UNUSED_ITEM',\n                item_type: 'modifier',\n                id: modifier.backend_name,\n            });\n        }\n\n        if (\n            modifier.type &&\n            !['boolean', 'size', 'quantity'].includes(modifier.type)\n        ) {\n            errors.push({\n                type: 'INVALID_MODIFIER_TYPE',\n                id: modifier.backend_name,\n                modifier_type: modifier.type,\n            });\n        }\n    });\n\n    return errors;\n};\n\nconst MenuTextInput = ({ name, value, setValue }) => {\n    return (\n        <>\n            <label htmlFor={name}>JSON {name}</label>\n            <br />\n            <textarea\n                id={name}\n                placeholder={name}\n                value={value}\n                onChange={(e) => {\n                    setValue(e.target.value);\n                }}\n            />\n        </>\n    );\n};\n\nconst MenuFileInput = ({ setValue }) => {\n    return (\n        <>\n            <input\n                type=\"file\"\n                onChange={(e) => {\n                    if (e.target.files[0]) {\n                        const reader = new FileReader();\n                        reader.onload = function () {\n                            const file_content = reader.result;\n                            setValue(file_content);\n                        };\n                        reader.readAsText(e.target.files[0]);\n                    } else {\n                        setValue(null);\n                    }\n                }}\n            />\n        </>\n    );\n};\n\nconst DoolizMenuExportCheck = () => {\n    const [menu_json, setMenuJson] = useState('');\n    const [menu_file, setMenuFile] = useState(null);\n    const [errors, setErrors] = useState(null);\n\n    return (\n        <Layout>\n            <SEO title=\"dooliz-menu-export-check\" />\n            <h2>dooliz-menu-export-check</h2>\n            <div>\n                <MenuTextInput\n                    name=\"menu\"\n                    value={menu_json}\n                    setValue={setMenuJson}\n                />\n                <br />\n                OR\n                <br />\n                <MenuFileInput setValue={setMenuFile} />\n            </div>\n\n            <br />\n            <button\n                type=\"button\"\n                onClick={() => {\n                    const menu_content = menu_json || menu_file;\n\n                    if (!menu_content) {\n                        alert('missing input');\n                        return;\n                    }\n\n                    try {\n                        setErrors(detectErrors(menu_content));\n                    } catch (e) {\n                        alert(e);\n                    }\n                }}\n            >\n                Detect errors\n            </button>\n            <br />\n            {errors && errors.length === 0 && (\n                <div className={styles.success}>No errors</div>\n            )}\n            {errors && errors.length > 0 && (\n                <div>\n                    {errors.map((error) => {\n                        const key = error.type + error.id;\n                        switch (error.type) {\n                            case 'DUPLICATE':\n                                return (\n                                    <div className={styles.error} key={key}>\n                                        Duplicate{' '}\n                                        <span className={styles.item_type}>\n                                            {error.item_type}\n                                        </span>{' '}\n                                        named{' '}\n                                        <span className={styles.item_name}>\n                                            {error.id}\n                                        </span>\n                                    </div>\n                                );\n                            case 'MISSING':\n                                return (\n                                    <div className={styles.error} key={key}>\n                                        Missing{' '}\n                                        <span className={styles.item_type}>\n                                            {error.item_type}\n                                        </span>{' '}\n                                        named{' '}\n                                        <span className={styles.item_name}>\n                                            {error.id}\n                                        </span>\n                                    </div>\n                                );\n                            case 'EMPTY_PLU':\n                                return (\n                                    <div className={styles.error} key={key}>\n                                        No PLU set for{' '}\n                                        <span className={styles.item_type}>\n                                            {error.item_type}\n                                        </span>{' '}\n                                        named{' '}\n                                        <span className={styles.item_name}>\n                                            {error.id}\n                                        </span>\n                                    </div>\n                                );\n                            case 'DUPLICATE_PLU':\n                                return (\n                                    <div className={styles.error} key={key}>\n                                        Multiple items with the same plu{' '}\n                                        <span className={styles.item_type}>\n                                            {error.records[0].item.plu}\n                                        </span>{' '}\n                                        named{' '}\n                                        <ul>\n                                            {error.records.map((record) => {\n                                                return (\n                                                    <li\n                                                        key={\n                                                            record.item\n                                                                .backend_name\n                                                        }\n                                                    >\n                                                        <span\n                                                            className={\n                                                                styles.item_name\n                                                            }\n                                                        >\n                                                            ({record.item_type})\n                                                            {\n                                                                record.item\n                                                                    .backend_name\n                                                            }\n                                                        </span>\n                                                    </li>\n                                                );\n                                            })}\n                                        </ul>\n                                    </div>\n                                );\n                            case 'UNUSED_ITEM':\n                                return (\n                                    <div className={styles.error} key={key}>\n                                        Unused{' '}\n                                        <span className={styles.item_type}>\n                                            {error.item_type}\n                                        </span>{' '}\n                                        named{' '}\n                                        <span className={styles.item_name}>\n                                            {error.id}\n                                        </span>\n                                    </div>\n                                );\n                            case 'INVALID_MODIFIER_TYPE':\n                                return (\n                                    <div className={styles.error} key={key}>\n                                        Invalid type{' '}\n                                        <span className={styles.item_type}>\n                                            {error.modifier_type}\n                                        </span>{' '}\n                                        for modifier named{' '}\n                                        <span className={styles.item_name}>\n                                            {error.id}\n                                        </span>\n                                    </div>\n                                );\n                            default:\n                        }\n                        return null;\n                    })}\n                </div>\n            )}\n        </Layout>\n    );\n};\n\nexport default DoolizMenuExportCheck;\n"],"sourceRoot":""}